@page "/"
@page "/login"
@using TakwondoFrontend.Models
@using TakwondoFrontend.Services
@layout LoginLayout

@inject AuthService AuthService
@inject NavigationManager NavigationManager

<div class="login-page">
    <div class="left-container">
        <div class="login-container">
            <h1>Welcome Back</h1>
            <p>Please login to continue</p>

            <!-- EditForm with proper binding -->
            <EditForm Model="User" OnValidSubmit="HandleLogin">
                <div class="form-group">
                    <label for="username">Username</label>
                    <!-- Correct binding syntax for InputText -->
                    <InputText id="username" class="form-control" @bind-Value="User.Username" />
                </div>  

                <div class="form-group">
                    <label for="password">Password</label>
                    <!-- Correct binding syntax for InputPassword -->

                    <InputText id="password" class="form-control" @bind-Value="User.Password" />
                </div>

                <button type="submit" class="login-button">Login</button>
            </EditForm>

            @if (loginFailed)
            {
                <p class="error-message">Invalid username or password. Please try again.</p>
            }

            <p class="signup-link">
                Don't have an account? <a href="/signup">Sign up</a>
            </p>
        </div>
    </div>
    <div class="right-container">
        <img src="images/takwondo_logo.png" alt="Logo" class="logo-image" />
    </div>
</div>

@code {
    private User User = new User(); // Model to hold username and password
    private bool loginFailed = false; // Tracks if login failed

    // Handles login attempt
    private async Task HandleLogin()
    {
        loginFailed = false; // Reset the failure flag

        // Call AuthService for login
        var isAuthenticated = await AuthService.LoginAsync(User);

        if (!isAuthenticated)
        {
            loginFailed = true; // If authentication fails, show error message
        }
        else
        {
            // Navigate to the home page on successful login
            NavigationManager.NavigateTo("/home");
        }
    }
}
